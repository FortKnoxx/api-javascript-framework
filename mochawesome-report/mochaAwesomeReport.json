{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-13T20:26:13.674Z",
    "end": "2022-07-13T20:26:15.323Z",
    "duration": 1649,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4ff02af5-e450-4544-b7ba-64bb3782f49e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c29a2c2-8418-440d-9d1b-9cf423f412e3",
          "title": "Test Scenarios 1 - GET",
          "fullFile": "C:\\Users\\Francois\\Desktop\\framework\\api-automation\\Scenarios_GET_Requests.mjs",
          "file": "\\Scenarios_GET_Requests.mjs",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1. A GET request for an endpoint",
              "fullTitle": "Test Scenarios 1 - GET 1. A GET request for an endpoint",
              "timedOut": false,
              "duration": 265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fetch(endpoints.nodejsEnpoint)\n.then(response => response.json())\n.then(data => {\n  //console.log(data),\n  //console.log(data.name), // Prints result from `response.json()` in getRequest\n  assert(data.name == 'Node.js',\"Assert failed, expected: Noe.js , actual: \" + data.name)\n})\n//.catch(error => console.error(error))\n//done();",
              "err": {},
              "uuid": "82b5e7e3-09bb-4dd8-8912-a7eb7428b870",
              "parentUUID": "9c29a2c2-8418-440d-9d1b-9cf423f412e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2. A GET request to get Hooks",
              "fullTitle": "Test Scenarios 1 - GET 2. A GET request to get Hooks",
              "timedOut": false,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fetch(endpoints.nodejsHooksEndpoint)\n.then(response => response.json())\n// .then(data => {\n//   //console.assert(data.name == 'Node.js')\n// })\n.catch(error => console.error(error))",
              "err": {},
              "uuid": "b27eff73-e0d9-441d-b7b3-aa3e49464ebf",
              "parentUUID": "9c29a2c2-8418-440d-9d1b-9cf423f412e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "3. A GET request to get Repos",
              "fullTitle": "Test Scenarios 1 - GET 3. A GET request to get Repos",
              "timedOut": false,
              "duration": 627,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fetch(endpoints.nodejsReposEndpoint)\n.then(response => response.json())\n// .then(data => {\n//   //console.assert(data.name == 'Node.js')\n// })\n.catch(error => console.error(error))",
              "err": {},
              "uuid": "499aa69e-8216-4822-80f5-4e63013f3bf9",
              "parentUUID": "9c29a2c2-8418-440d-9d1b-9cf423f412e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82b5e7e3-09bb-4dd8-8912-a7eb7428b870",
            "b27eff73-e0d9-441d-b7b3-aa3e49464ebf",
            "499aa69e-8216-4822-80f5-4e63013f3bf9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1085,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "2636e873-1283-40d8-989e-48ab9404f94e",
          "title": "Test Scenarios - POST",
          "fullFile": "C:\\Users\\Francois\\Desktop\\framework\\api-automation\\Scenarios_POST_Requests.mjs",
          "file": "\\Scenarios_POST_Requests.mjs",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1. A POST request 1",
              "fullTitle": "Test Scenarios - POST 1. A POST request 1",
              "timedOut": false,
              "duration": 302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fetch(endpoints.nodejsPostEndpoint, { \n  method: 'POST',\n  body: JSON.stringify(requests.requestPacketPOST),\n  headers: { 'Content-Type': 'application/json' }\n})\n.then(response => response.json())\n.then(data => {\n  if (data.id === 201) {\n    console.log(\"First POST test case run successfully\");\n    console.log(data.id);\n    //const message = `Test Message: ${data.id}`;\n    //throw new Error(message);\n  }else{ assert(false, \"This scenario is expectred to fail\");}\n }).catch(error => console.error(error))",
              "err": {},
              "uuid": "686f656f-f57c-4008-a6cc-70871728f95b",
              "parentUUID": "2636e873-1283-40d8-989e-48ab9404f94e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2. A POST request 2",
              "fullTitle": "Test Scenarios - POST 2. A POST request 2",
              "timedOut": false,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fetch(endpoints.nodejsPostEndpoint, { \n  method: 'POST',\n  body: JSON.stringify(requests.requestPacketPOST),\n  headers: { 'Content-Type': 'application/json' }\n})\n.then(response => response.json())\n.then(data => {\n  if (data.title === \"loren impsum doloris\") {\n    assert(true);\n    //console.log(\"Second POST test case run successfully\");\n    //const message = `Test Message: ${data.title}`;\n    //throw new Error(message);\n    //this.assert.Error;\n  }else{ assert(false, \"This scenario is expectred to fail\");}\n})//.catch(error => console.error(error))",
              "err": {},
              "uuid": "b9dff31d-f636-48af-a88a-0ebd3e08419b",
              "parentUUID": "2636e873-1283-40d8-989e-48ab9404f94e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "686f656f-f57c-4008-a6cc-70871728f95b",
            "b9dff31d-f636-48af-a88a-0ebd3e08419b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 549,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochaAwesomeReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportFilename": "mochaAwesomeReport"
      },
      "version": "6.2.0"
    }
  }
}